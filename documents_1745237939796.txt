{
    "/": {
        "title": "Home",
        "text": "নমস্কার! Welcome to HTML.org.in Your gateway to mastering web development. Your advertisement-free hub for learning web development At HTML.org.in, we believe in  free, accessible education  without distractions. Our platform offers: 1 Open Learning for All 100% ad-free learning experience 💻 Completely free tutorials and resources 🆓 No registration is required 🚫 Zero tracking or data collection 2 Why Choose Us? 📖 Comprehensive, community-driven content 🌍 Available to everyone worldwide 🔄 Always up-to-date with latest standards 👩💻 Beginner-friendly approach For now, your are done; you are good to go for the next chapter"
    },
    "/html/html-introduction/": {
        "title": "HTML Introduction",
        "text": "HTML Introduction HTML is the standard markup language. It looks like a skeleton for a website. A simple HTML structure HTML <! DOCTYPE  html > \n     < html > \n     < head > \n         < title >Page title</ title > \n     </ head > \n     < body > \n         < h1 >My first heading</ h1 > \n         < p >My first paragraph</ p > \n     </ body > \n     </ html > This is our code preview  Let's talk about previous example <!DOCTYPE html> This is used to define that website is created with HTML5. <html> This is the root element. <head> This tag is used for add about website metadata and link stylesheet. <title> This tag is used to add website title. <body> We use this tag to add visible contents like images, paragraphs, hyperlinks, lists, tables, etc <h1> Element defines a large heading. <p> Element defines a paragraph. Let's talk about How HTML Work & How we write. HTML stands for hypertext markup language. When using HTML, we should keep in mind that every HTML element requires an opening & closing bracket. But there are some exceptions, such as [<br>, <hr>, <img>, <link>] etc. Tags like this are self-closing. This tag should be started with < this, then followed by your element argument, followed by> let's write it together \"<html> \" This is an opening tag. This tag should now be closed using the \"/\" symbol. What's the best way to do it? After the first bracket, we need to add \"/\" ,then followed by your element argument, followed by> let's write it together </html> This is the closing tag. Let's discuss about the HTML history 1989 - Tim Berners-Lee invented www 1991 - Tim Berners-Lee invented HTML 1995 - HTML Working Group defined HTML 2.0 1997 - W3C Recommendation: HTML 3.2 1999 - W3C Recommendation: HTML 4.01 2000 - W3C Recommendation: XHTML 1.0 2008 - W3C HTML5 First Public Draft 2016 - W3C Candidate Recommendation: HTML 5.1 For now, the introduction is done; you are good to go for the next chapter"
    },
    "/html/html-editors/": {
        "title": "HTML Editors",
        "text": "HTML Editors Hey, you only need a text editor, Then the whole world will become a canvas. Then you are good to go for HTML. About Editors To be honest you can use any text editor. Like notepad ++, vs code, brackets, atom etc In my opinion, you should use VS Code. It is very easy to use. Download instructions. Open you favorite search engine and search for VS Code. Choose from this  Your Are Done You just need to install it on your PC. See you in the next chapter"
    },
    "/html/vscode-extensions-for-html/": {
        "title": "VSCode Extensions For HTML",
        "text": "VSCode Extensions For HTML Hey, In previous section you have learned about what are text editors and how you can use them as well as which text editor is best for you, Now we will get to know that what basically extensions are and how they integrate with VSCode and increase our productivity About Extensions In a very simple way, Extensions in text editors are nothing but a way to extends the functionality of our text editor. As here we are working on VSCode so we can learn about how do we use extensions in vscode. How To Use Extensions To use extension in our VSCode editor we need to download them inside our VSCode and then install them, after that we will good to go to use them. Where To Find Extensions VSCode provides their own  marketplace  to download extensions for free. OR you can download them directly from your VSCode, see the below image Must have VSCode Extensions for HTML 1 Live Server Live server is a vscode extension which helps you to see the changes instantly on browser once you hit save on your vscode, you do not need to save changes and go to browser and hit refresh, it will be automatically refresh by browser once you install and start this extension. Download / guide from market place 2 Auto Close Tag Auto Close Tag is an extensions which solves your problem to open or close tags explicitly, now you just need to open the tag and it wil close automatically with the help of this extension Download / guide from market place 3 HTML CSS Support Html Css support is an extension which helps you to auto complete your id and class names in your html elements. Download / guide from market place 4 HTML Preview An extension to preview HTML files while editing them in VSCode Download / guide from market place You are done for now"
    },
    "/html/html-basic/": {
        "title": "HTML Basic",
        "text": "HTML Basic In this lecture, we are going to talk about some basic HTML example. HTML Documents All HTML documents need to declare the document type.  <!DOCTYPE html> All HTML documents start with  <html>  tag itself All HTML documents end with  </html>  tag itself All HTML document contains the visual part of the  <body>  tag HTML Headings Headings are used to create a title for the HTML document. There are 6 types of heading h1 is the most important heading & h6 is the less important heading. h1 heading is also important from an SEO perspective. HTML < h1 > Heading number 1</ h1 > \n < h2 > Heading number 2</ h2 > \n < h3 > Heading number 3</ h3 > \n < h4 > Heading number 4</ h4 > \n < h5 > Heading number 5</ h5 > \n < h6 > Heading number 6</ h6 > This is our code preview  HTML Paragraphs HTML paragraphs are defined with the <p> tag HTML < p > This is a paragraph </ p > \n < p > This is a another paragraph </ p > HTML Links HTML links are defined with the <a> tag HTML < a  href = \"https://www.html.org.in\" > This is a link </ a > The link's destination is specified in the href attribute. Attributes are used to provide additional information about HTML elements. You will learn more about attributes in a later chapter. HTML Images HTML images are defined with the  <img>  tag We use (src) for source file. We use (alt) for alternative text. We use (width) for width of image. We use (height) for height of image. We use (title) for title of image. HTML < img src = \"html-org-in.png\"  alt = \"html.org.in\"  width = \"250\"  height = \"250\"  > Html Media tag There are some special tags which are used to add Videos & Audios in your Html page! You can add videos in your HTML page using the <video> tag HTML < video  controls > \n < source  src = \"your file.mp4\" > \n </ video > By the use of this tag you'll get some features in your video like: Play/Pause Volume Fullscreen etc. Similarly, you can add audios in your HTML page using the <audio> tag HTML < audio  controls > \n < source  src = \"your file.mp3\" > \n </ audio > That's all for this lesson, see you next one."
    },
    "/html/html-elements/": {
        "title": "HTML Elements",
        "text": "HTML Elements An HTML element is defined by a start tag, some content, and an end tag. One Element on other Elements HTML elements can be nested inside of each other. It means that you can add an HTML element inside another HTML element. as we all know HTML itself is an element. & also we know we need to add body & body so on. if you remember our previous post HTML Basic then you can recognize head & body also a HTML element. This is a very important point to understand. HTML <! DOCTYPE  html > \n < html  lang = \"en\" > \n < head > \n </ head > \n < body > \n     < p >This is a paragraph.</ p > \n     < h1 >This is a heading.</ h1 > \n </ body > \n </ html > Example Explained We start with  html  tag Which is an element itself After that, we add  head & body ***So in this case  head and body  are Nested with HTML tag*** That's all for this lesson, see you next one."
    },
    "/html/html-attributes/": {
        "title": "HTML Attributes ",
        "text": "HTML Attributes  In this lecture, we are going to talk about some HTML attribute. HTML Attributes All html element can have  Attributes Attribute can provide some  additional information  About html elements Attributes usually come in name/value pairs like:  name=\"value\" Let's talk about herf tag The <a> tag defines a hyperlink. The href attribute specifies the URL of the page the link goes to: HTML < a  href = \"https://www.html.org.in\" >Go to HTML.ORG.IN</ a > Let's talk about Download file when clicking on the link (instead of navigating to the file) tag The download inside the a tag specifies that the target (the file specified in the href attribute) will be downloaded when a user clicks on the hyperlink. HTML < a  href = \"file.pdf\"  download > \n     < img  src = \"download_logo.jpg\"  alt = \"W3Schools\"  width = \"100\"  height = \"100\" > \n </ a > Let's talk about src tag The <img> tag defines an image. The src attribute specifies the URL of the image: HTML < img  src = \"https://www.html.org.in/img-1.png\" > There are two ways to specify the URL in the src attribute Absolute URL: https://www.html.org.in/img-1.png Now question is, how do we know that the URL is absolute? Absolute URL is a URL that starts with http:// or https://, Links to an external image that is hosted on another website. Note:- Maybe you don't own the copyright of the image & Then if you use this image, you may be violated copyright law. 2.   Relative URL: ./html-img/a       Now question is, What is relative URL?       Relative URL is a URL that starts with ./ or ../, Links to an image that is hosted on the same website. Tip:- If you ask me I'll recommend you to use a relative URL. Because in the future you may want to move your website to another domain, Then your website will never break. Let's talk about alt tag The <img> tag defines an image. The alt attribute specifies an alternate text for the image, if the image cannot be displayed: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\" > Note:- The alt attribute is used to specify an alternate text for an image, if the image cannot be displayed. Let's talk about title tag The <img> tag defines an image. The title attribute specifies extra information about the image: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\"  title = \"HTML.ORG.IN\" > Note:- The title attribute is used to specify extra information about an image. Let's talk about width tag The <img> tag defines an image. The width attribute specifies the width of the image: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\"  title = \"HTML.ORG.IN\"  width = \"100\" > Let's talk about height tag The <img> tag defines an image. The height attribute specifies the height of the image: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\"  title = \"HTML.ORG.IN\"  width = \"100\"  height = \"100\" > That's all for this lesson, see you next one."
    },
    "/html/html-headings/": {
        "title": "HTML Headings",
        "text": "HTML Headings Heading is a title that you want to display on your web page Basic knowledge HTML headings are defined by the  <h1>  to  <h6>  tags. The  <h1>  tag is used for the largest heading, Also this is a most important heading the  <h6>  tag is used for the smallest heading, Also this is a less important heading Note:- important for search engine optimizer(SEO) Example HTML < h 1> This is a heading  1< /h 1> \n < h 2> This is a heading  2< /h 2> \n < h 3> This is a heading  3< /h 3> \n < h 4> This is a heading  4< /h 4> \n < h 5> This is a heading  5< /h 5> \n < h 6> This is a heading  6< /h 6> Code preview ↓ Let's talk about importance of heading. Okay as we all know, the heading is the title of the page. Now maybe you have a question why so many headings are there on the web page? Well, when a search engine indexes a web page/website, it will index that web page according to that heading. That means that will structure and content base on the heading. So I think you understand why the heading play a big role in a website. Note:- Each HTML heading has a default size, But you can change the size using  font-size  property. That's all for this lesson, see you next one."
    },
    "/html/html-paragraphs/": {
        "title": "HTML Paragraphs",
        "text": "HTML Paragraphs When we use a  <p>  tag, it will create a paragraph. Also it is a block element. HTML Paragraphs The HTML  <p>  defines a paragraph. It is a block element. A paragraph always starts with a new line, and the browser will automatically add some white space before and after the paragraph. Example:- HTML < p > This is a paragraph number one. < /p > \n < p > This is a paragraph number two. < /p > \n < p > This is a paragraph number three. < /p > Result HTML Display When it comes to display, You cannot arrange them using extra space or create a new line. In short, you can not do anything in this way. BUT! Don't worry we will fix that up in our upcoming lectures. The is really a beautiful way to fix this. Not right now. Example:- HTML < p > Lorem ipsum dolor sit amet consectetur adipisicing elit. \n         Quo quas natus esse ea magnam expedita, neque eos illum molestias, \n eaque, dolorem architecto explicabo tempora dolores saepe \n                  eveniet aut quam adipisci. \n </ p > HTML < p >   \n     Lorem  ipsum  dolor  sit  amet              consectetur  adipisicing  elit. \n     Quo  quas  natus  esse  ea  magnam    expedita,  neque  eos  illum  molestias, \n     eaque,  dolorem             architecto  explicabo  tempora  dolores  saepe \n     eveniet  aut  quam                                             adipisci. \n < /p > As you can see we create two paragraphs with a different styles. What did you think, What web page will display? Result HTML Line Breaks We use  <br>  element to create a line break. Example:- <p>This is a <br> paragraph with <br> with line breaks.</p> Result Let's talk about Poem Some time we need right some poem to display. But if you doing in previous way then it will not work. Now question how we will create this. Without using  <br>  tag Solution:- We need to use  <pre>  for this. HTML < pre > \n     Thou  hast  made  me  endless,  such  is  thy  pleasure.  This  frail  vessel  thou  emptiest  again  and  again,  and  fillest  it  ever  with  fresh  life. \n \n     This  little  flute  of  a  reed  thou  hast  carried  over  hills  and  dales,  and  hast  breathed  through  it  melodies  eternally  new. \n \n     At  the  immortal  touch  of  thy  hands  my  little  heart  loses  its  limits  in  joy  and  gives  birth  to  utterance  ineffable. \n \n     Thy  infinite  gifts  come  to  me  only  on  these  very  small  hands  of  mine.  Ages  pass,  and  still  thou  pourest,  and  still  there  is  room  to  fill. \n < /pre > Tag Reference Tag   Description <p> Defines a paragraph <br> Inserts a single line break <pre> Defines pre-formatted text That's all for this lesson, see you next one."
    },
    "/html/html-styles/": {
        "title": "HTML Styles",
        "text": "HTML Styles The HTML  style  attribute is used to add styles to an element, such as color, font, size, and more. Let's talk about HTML style. When it's come to an excellent looking website, we need to use some styles. We have more than 2 ways to use styles. See below for more info. Inline Style | We need to use  style=\"property:value;\" Internal Style | We need to use  style  tag on  head , We will talk about later External Style | We must create a external css file  style.css  & then we need to use  link  to add this style file. Now it's time practically apply time Let me right down a simple example. HTML < p style = \"color:red;\" > I  am  red  text < / p > \n < p style = \"color:green;\" > I  am  green  text < / p > \n < p style = \"color:yellow;\" > I  am  yellow  text < / p > As you can see, We write a simple example. Can you guess what will this code do? Here is code preview - Okay, in your Previous example we change the color of the text. This is NOT! the end. We can change anything of an element. Let's do something crazy think. HTML < p style = \"color:red; background-color: gray; font-size: 25px;\" >  Lorem  ipsum  dolor  sit  amet.  < / p >   Code preview As you can see we change the background color of the text. if You look carefully, you will see some white space around the text. This is padding/margin witch added by the browser. I think it's time to watch a video about HTML style. That's all for this lesson, see you next one."
    },
    "/html/html-formatting/": {
        "title": "HTML Formatting",
        "text": "HTML Formatting We need to use different text format to make our text look better. or define special meaning. I think we should know them first. Tag Name Use for <b> Bold text (we can use  strong  tag also. BUT! Not recommended ) <strong> Important text <i> Italic text <em> Emphasized text <mark> Marked text <u> Underlined text <small> Smaller text <del> Deleted text <ins> Inserted text <sub> Subscript text <sup> Superscript text Now It's your time to implement them. That's all for this lesson, see you next one."
    },
    "/html/html-comments/": {
        "title": "HTML Comments",
        "text": "HTML Comments Let's talk about comments in HTML. Why we need comments? When we write HTML comments, Then the browser will automatically ignore this. <!-- This is a comment --> Now maybe you have a question about why we need these comments? Code comment is a way to talk with other developers, Let's assume we are working with more than one developer, now if I write an essential code so I can highlight it for other developers. That's all for this lesson, see you next one."
    },
    "/html/html-colors/": {
        "title": "HTML Colors",
        "text": "HTML Colors In this lecture, we are going to talk about HTML colors. Maybe you have a question about why we need HTML Colors? Frankly, This is not necessary, When you want to create an ugly website. BUT! when you are going to create a website for your client, definitely you need to create a good looking amazing website. Now we are going to describe more HTML colors. Code Example:- HTML  < div  class = \"color-box\" > \n       < div  class = \"color-box-1\" >red</ div > \n       < div  class = \"color-box-2\" >black</ div > \n       < div  class = \"color-box-3\" >brown</ div > \n       < div  class = \"color-box-4\" >aqua</ div > \n       < div  class = \"color-box-5\" >crimson</ div > \n       < div  class = \"color-box-6\" >darkorange</ div > \n  </ div > Code Example CSS  CSS .color-box-1  { \n             background-color:  red ; \n         } \n \n         .color-box-2  { \n             background-color:  black ; \n         } \n \n         .color-box-3  { \n             background-color:  brown ; \n         } \n \n         .color-box-4  { \n             background-color:  aqua ; \n         } \n \n         .color-box-5  { \n             background-color:  crimson ; \n         } \n \n         .color-box-6  { \n             background-color:  darkorange ; \n         } This is how background color looks like this Now the big question is how we implement this on your web page Okay, I think this is not enough to describe how we can write our CSS style. First, we need a defined which HTML element we are going to style, For that we need to create some class & id (should not be repeated) even though we can style by selecting an HTML element. Text Color:- Hello World Lorem ipsum... Ut wisi enim... Example HTML < p style = \"color:Tomato;\" > Hello  World </p> \n < p style = \"color:DodgerBlue;\" > Lorem  ipsum... </p> \n < p style = \"color:MediumSeaGreen;\" > Ut  wisi  enim... < / p >"
    },
    "/html/html-lists/": {
        "title": "HTML Lists",
        "text": "HTML Lists HTML lists allow web developers to group a set of related items in lists. Ordered HTML List An unordered list starts with the  <ol>  tag. Each list item starts with the  <li>  tag. The list items will be marked with bullets (small black circles) by default: HTML < ol > \n     < li > Coffee </li> \n     < li > Tea </li> \n     < li > Milk </li> \n < /ol > Example Coffee Tea Milk Unordered HTML List An unordered list starts with the  <ul>  tag. Each list item starts with the  <li>  tag. The list items will be marked with bullets (small black circles) by default: HTML < ul > \n     < li > Coffee </li> \n     < li > Tea </li> \n     < li > Milk </li> \n < /ul > Example Coffee Tea Milk HTML Description Lists HTML also supports description lists.A description list is a list of terms, with a description of each term. The  <dl>  tag defines the description list, the  <dt>  tag defines the term (name), and the  <dd>  tag describes each term: HTML < dl > \n     < dt > Coffee </dt> \n     < dd > -Coffee  contains  caffeine < /d d > \n     < dt > Milk </dt> \n     < dd > -Milk  contains  protein < /d d > \n < /dl > Coffee - black hot drink Milk - white cold drink That's all for this lesson, see you next one."
    },
    "/html/html-forms/": {
        "title": "HTML Forms",
        "text": "HTML Forms In this lecture, we are going to talk about HTML from What are forms? Forms are used to gather information for a specific purpose. They are used to create order forms, surveys, and feedbacks in a webpage. HTML allows you to create such forms easily using the  <form>  tag. Lets look into some basic syntax for text fields, buttons and checkboxes. Input Tag HTML < form > \n         Name \n     < input  type  =  \"text\" > \n         DOB \n     < input  type  =  \"text\" > \n < /form > From the above example we see that the starting of a form starts with the  <form>  tag. Text fields are used when you require the user to enter data in the form. This will generate a form which will look like: Radio buttons HTML < form > \n     Programming  Languages \n     < input  type  =  \"checkbox\"  name=\"c++\" > C++ \n     < input  type  =  \"checkbox\"  name=\"java\" > Java \n     < input  type  =  \"checkbox\"  name=\"python\" > Python \n < /form > Checkboxes are used to select one or more options of a limited number of choices. This will generate a form which will look like: Select HTML < form > \n     Year  of  study \n     < s elect  name=\"year of study\" > \n     < option  value=\"First\" > First \n     < option  value=\"Second\" > Second \n     < option  value=\"Third\" > Third \n     < option  value=\"Fourth\" > Fourth \n     < /select > \n < /form > The select element creates a drop down list. Each choice offered by the menu is represented by an option element. This will generate a form which will look like: Button HTML < form > \n     < button  type=\"button\" > Submit < /butto n > \n < /form > The button tag is used to create a button in the webpage. Adding it inside a <href=\"\"> will link it to redirect to another site. This will generate a button which will look like: That's all for this lesson, see you next one."
    },
    "/html/html-links/": {
        "title": "HTML Links",
        "text": "HTML Links An HTML Link helps us to add a direct link to files or website present at same address or the other. There are 3 types of Linking: 1. Internal Linking 2. External Linking 3. Linking to sections of a document Example of HTML Internal Linking Internal Linking means linking to file in same directory. HTML <! DOCTYPE  htm l > \n   < html  lang=\"en\" > \n     < head > \n     < /head > \n   < body > \n       < a  href=\"Internal_Link_html.html\" > This  is  a  Internal  Link < / a > \n   < /body > \n < /html > Example of HTML External Linking External Linking means linking to a External file or website not in same directory. HTML <! DOCTYPE  htm l > \n   < html  lang=\"en\" > \n     < head > \n     < /head > \n   < body > \n       < a  href=\"https://www.duckduckgo.com/\" > This  is  a  External  Link  to  duckduckgo.com < / a > \n   < /body > \n < /html > Example of Linking to sections Linking to sections means linking to some section in same html file. HTML <! DOCTYPE  html > \n   < html  lang = \"en\" > \n     < head > \n     </ head > \n   < body > \n     < h2  id = \"Section_to_go\" >Example of HTML Internal Linking</ h2 > \n     < p >Internal Linking means linking to file in same directory.</ p > \n     < img  src = \"Image 1.png\"  alt = \"\"  style = \"height: 200px; width: 400px;\" > \n     < br > \n     < a  href = \"Internal_Link_html.html\" >This is a Internal Link</ a > \n     < br > \n     < a  href = \"https://www.duckduckgo.com/\" >This is a External Link to duckduckgo.com</ a > \n     < a  href = \"#Section_to_go\" >This is a Link to section of Internal Link.</ a > \n   </ body > \n </ html > \n   \n   \n This is a Link to section of Internal Link. On Clicking on above link, you will be directed to Section of Internal Link. That's all for this lesson, see you next one."
    },
    "/html/html-graphics/": {
        "title": "HTML Graphics",
        "text": "HTML Graphics In this lecture, we are going to discuss about how to create Graphics in HTML. There are two modern web technologies for creating rich drawn graphics within the browser: Canvas Scalable Vector Graphics (SVG). Canvas A hypertext markup language element introduced in HTML5 for creating and analyzing bitmap images as pixels. The Canvas specification provides a Javascript API for accessing the element's graphics context and performing drawing operations with it. The HTML  <canvas>  element is used to draw graphics, on the fly, via scripting (usually JavaScript). The  <canvas>  element is only a container for graphics. You must use a script to actually draw the graphics.Canvas has several methods for drawing paths, boxes, circles, text, and adding images. Below is an example of Canvas Tag in html HTML   < canvas  id = \"myCanvas\"  width = \"200\"  height = \"100\"  style = \"border:3px solid red;\" > \n    < canvas > \n                      \n   < canvas  id = \"myCanvas\"  width = \"200\"  height = \"200\"  style = \"border:3px solid  grey; margin-left:15px\" > \n  < canvas > Example SVG HTML SVG is a modularized language which is used to describe graphics in XML. It describe two-dimensional vector and mixed vector/raster graphics in XML. It is a W3C recommendation. Since it's an XML files, you can create and edit an SVG image with text editor, but generally drawing programs like inkspace are preferred to create it. SVG is mostly used for vector type diagrams like pie charts, 2-Dimensional graphs in an X,Y coordinate system etc. The  <svg>  element specifies the root of a SVG fragment. You can animate every element and every attribute in SVG files. Below is an example of SVG Tag in html CSS < style > \n     svg  { \n     border:2px  solid  red ; \n     padding:25px ; \n     }; \n < /style > That's all for this lesson, see you next one."
    },
    "/html/html-classes/": {
        "title": "HTML Classes",
        "text": "HTML Classes HTML classes allow web developers to define blueprint and create and modify all elements which are formed from a given blueprint. Let's talk about the class attribute The class attribute serves the purpose of linking the html element to the logic (JavaScript) and the style sheet. We can access and modify the elements by referencing the class name defined in the class attribute. Example In the following example we have three  <div>  elements with a class attribute with the value of \"animal\". All of the three  <div>  elements will be styled equally according to the .animal style: HTML < div class =  \"animal\" > \n     < h2 > Dog </h2> \n     < p > Dogs  are  good. < / p > \n < /div > \n \n < div class =  \"animal\" > \n     < h2 > Cat </h2> \n     < p > Cats  are  not  good. < / p > \n < /div > CSS  < style > \n     .animal  { \n         background-color:  black ; \n         color:  yellow ; \n         border:  2px  solid  white ; \n         margin:  20px ; \n         padding:  20px ; \n     } \n  < /style > Result The class attribute can be used on any HTML element. The class name is case sensitive! Syntax for Classes To create a class; write a period  (.)  character, followed by a class name. Then, define the CSS properties within curly braces  {} Multiple Classes HTML elements can belong to more than one class. To define multiple classes, separate the class names with a space, e.g. <<  class=\"mammal oviparous\" >>. The element will be styled according to all the classes specified. Example In the following example, the first < > element belongs to both the \" mammal \" class and also to the \"oviparous\" class, and will get the style from both of the classes: HTML < h3 class =  \"mammal oviparous\" >   \n     Platypus   \n < /h 3> \n < h3 class =  \"mammal\" > \n     Dogs \n < /h 3> \n < h3 class =  \"oviparous\" > \n     Frogs \n < /h 3> \n     CSS < style > \n     .mammal  { \n        background-color:  black ; \n        color:  yellow ; \n        padding:  20px ; \n      }  \n       \n      .oviparous  { \n        text-align:  center ; \n      } \n  < /style > Result: Same class can be shared by different elements Example HTML < h1 class =  \"animal\" >   \n     Whale \n < /h 1> \n < h2 class =  \"animal\" > \n     Elephant \n < /h 2> \n < p class =  \"animal\" > \n     Fox \n < /p > \n < h5 class =  \"animal\" > \n     Ant \n < /h 5> CSS  < style > \n  .animal  { \n     background-color:  black ; \n     color:  yellow ; \n     padding:  10px ; \n   }  \n  < /style > Result That's all for this lesson, see you next one."
    },
    "/html/html-block-and-inline-elements/": {
        "title": "HTML BLOCK AND INLINE ELEMENTS",
        "text": "HTML BLOCK AND INLINE ELEMENTS In HTML, there are two basic categories of HTML elements namely: BLOCK LEVEL ELEMENTS INLINE ELEMENTS BLOCK LEVEL ELEMENTS Block-level elements are elements in HTML (Hypertext Markup Language) that are used to structure the content of a web page into blocks or sections. These elements create a \"block\" that typically starts on a new line and extends to the full width of their containing element, which is usually the parent element. Here are some common block-level elements in HTML: HTML < div >   < p >   < form >  < li >  < ul >   < main >  < section >  \n < nav >  < hr >  < article >  < header >  < footer >  < br >  < figure > \n < ol >  < figcation >  < pre >  < aside >  < dl >  < dd >  < figcaption > \n < h1 > < h2 > < h3 > < h4 > < h5 > < h6 > Example Let's take the  <div>  and  <p>  elements: HTML < div > This is a Dog < /div > \n < p > This is a Cat < /p > Results The  <div>  and  <p>  elements are block-level elements, and they consistently begin on a new line while occupying the entire available width, extending to both the left and right edges. INLINE ELEMENTS Inline elements in HTML are elements that do not create a new block-level box within the document's flow but instead flow within the content of a block-level element or other inline-level elements. They typically only take up as much width as necessary to contain their content and do not force a new line to start after them. Inline elements are used for formatting and styling parts of text or other inline-level elements within a block-level context. Here are the inline elements in HTML: HTML < a >   < b >   < strong >   < i >   < span >   < em > \n < small >   < code >   < abbr >   < button >   < img > \n < input >   < output >   < sub >   < sup >   < textarea > \n < map >   < time >   < script >   < select >    < label >   < big > Example Let's take the  <i>  and  <strong>  elements: HTML Hello  my  name  is < i > Johnn  Doe < / i > and  i  am  < stron g > 38  years  old < /stron g >   Results Take Note: An inline element cannot contain a block-level element That's all for this lesson, see you next one."
    },
    "/html/html-entities/": {
        "title": "HTML Entities",
        "text": "HTML Entities HTML Entities are representation of different varieties of characters, assigning icons, mathematical operators, Basics HTML Entities. Tag representation and useage namespace tag ( &nbps; ) < Less than ( & lt; ) > Greater than ( & gt; ) & Amphersand ( & amp; ) \" Double quotation mark ( & quot; ) ' apostrophe ( & apos; ) £ Pound Symbol ( & pound; ) ©️ Copyright ( & copy; ) That's all for this lesson, see you next one."
    },
    "/html/html-id/": {
        "title": "HTML Id",
        "text": "HTML Id The HTML id attribute is used to specify a unique id for an HTML element. Using The id Ther is some point we need to know about ID We can use this for one single and particular element. We can't use it twice. ID Specificity is 1,0,0 (This is hight). In order to replace it we can use an !important The syntax for id is: write a hash character (#), followed by an id name. Then, define the CSS properties within curly braces {}. In the following example, we have an <h1> element that points to the id name \"myId\". This <h1> element will be styled according to the #myId style definition in the head section: Example HTML <! DOCTYPE  htm l > \n < html > \n     < head > \n         < style > \n             #myId { \n                 background-color:  lightblue ; \n                 color:  black ; \n                 padding:  40px ; \n                 text-align:  center ; \n             } \n         < /style > \n     < /head > \n < body > \n \n < h1 id = \"myId\" > My  Id  test < /h 1> \n \n < /body > \n < /html > Result: Difference Between Class and ID 👇🏾 A class name can be used by multiple HTML elements, while an id name must only be used by one HTML element within the page: HTML Bookmarks with ID and Links HTML bookmarks are used to allow readers to jump to specific parts of a webpage. can be useful if your page is very long. To use a bookmark, you must first create it, and then add a link to it. Then, when the link is clicked, the page will scroll to the location with the bookmark. Example HTML < h2 id = \"myId\" > Go  to  page  header < /h 2> Code preview is not apply HTML Id Summary ✨ The id attribute is used to specify a unique id for an HTML element The value of the id attribute must be unique within the HTML document The id attribute is used by CSS and JavaScript to style/select a specific element The value of the id attribute is case sensitive The id attribute is also used to create HTML bookmarks That's all for this lesson, see you next one."
    },
    "/html/html-iframe/": {
        "title": "HTML iframe",
        "text": "HTML iframe An HTML iframe is used to display a web page within a web page. How does it work? 🤔 In order to use this, we need to know something. This is inline frame An inline frame is used to embed another document within the current HTML document. Syntex HTML < iframe src = \"url\"  title = \"description\" >< /iframe > Tips:  It is a good practice to always include a title attribute for the <iframe>. This is used by screen readers to read out what the content of the iframe is. Iframe - Set Height and Width Use the height and width attributes to specify the size of the iframe. Or you can add the style attribute too. HTML < iframe src = \"url.htm\"  style = \"height:200px;width:300px;\"  title = \"Iframe Example\" >< /iframe > That's all for this lesson, see you next one."
    },
    "/html/html-file-paths/": {
        "title": "HTML File Paths",
        "text": "HTML File Paths A file path describes the location of a file in a web site's folder structure. HTML File paths A file path describs the location of a file in a web site's folder structure. File paths are used when linking to external file, like: Web pages. Images Style sheets JS(JavaScript) There are two types of HTML File Paths. Absolute File Paths When we are going to use absolute file then we need to give full URL Relative File Paths A relative file path points to a file relative to the current page. The below is a quick example: Relative file path Example HTML < img src = \"./flower.jpg\"  alt = \"Relative Image Preview\"  height = \"500px\" > Preview Picture Downlode from Pixabay \"This picture will be displayed from the html.org.in website server.\" Absolute file path Example HTML < img  src = \"https://picsum.photos/200\"  alt = \"Absolute Image Preview\"  height = \"500px\" > Preview: This picture was displayed directly from the  https://picsum.photos/  server. It will change with a refresh... That's all for this lesson, see you next one."
    },
    "/html/html-math/": {
        "title": "HTML Math",
        "text": "HTML Math MathML is intended to facilitate the use and re-use of mathematical and scientific content on the Web. The MathML <math> tag in HTML5 is the most prioritized element. Whatever MathML element you want to use should be wrapped inside of the <math> tag. Attributes: The tag accepts some attributes which are listed below: class|id|style:  This attribute is used to hold the styles of the child elements. dir:  This attributes holds the direction value. It holds two types of direction values ltr for left to right and rtl for right to left. href:  This attribute is used to hold any hyperlink to a specified URL. mathbackground:  This attribute holds the value of the math expressions background color. mathcolor:  This attribute holds the color of the math expressions. display:  This attribute holds the value of rendering of HTML element. There can be two value block which means that this element will be displayed outside the current span of text, inline which means that this element will be displayed inside the current span of text. overflow:  It holds the value how the expression will behave. The default value is the linebreak and other possible values are scroll, elide, truncate, and scale. mode:  Express the display attribute, possible values are display and inline. HTML < h 3> HTML5 MathML math tag < /h 3> \n < math > \n    < mrow > \n       < mrow > \n          < msup > \n             < mi > x </mi> \n             < mn > 2 </mn> \n          < /msup > \n          < mo > + </mo> \n          < msup > \n             < mi > y </mi> \n             < mn > 2 </mn> \n          < /msup > \n       < /mrow > \n       < mo > = </mo> \n       < msup > \n          < mi > z </mi> \n          < mn > 2 </mn> \n       < /msup > \n    < /mrow > \n < /math > That's all for this lesson, see you next one."
    },
    "/html/acessibility-for-html/": {
        "title": "Acessibility for HTML",
        "text": "Acessibility for HTML Having accessible websites is crucial for inclusivity, legal compliance, a broader audience, improved user experience, SEO benefits, ethical responsibility, reputation, and future-proofing. Did you know? 96.8% of homepages had detectable WCAG 2 failures. 15% of the world's population has some sort of disability. 62% of adults with a disability own a laptop or desktop computer compared to 81% of adults without a disability. According to the Web AIM Million Report researching one million websites, the number of detectable accessibility errors was 50.8 on average per home page. This was a minor improvement from 51.4 errors one year ago. source of information How to start creating accessible web apps? To begin creating accessible websites, start by familiarizing yourself with the Web Content Accessibility Guidelines (WCAG), a comprehensive set of standards for web accessibility. Adopt accessible design principles and coding practices from the outset, focusing on factors like clear and organized content, keyboard navigation, alternative text for images, and semantic HTML markup. Regularly test your website using accessibility evaluation tools and, crucially, seek feedback from individuals with disabilities to identify and address specific issues. Make accessibility an integral part of your web development process, ensuring that new content and features are accessible and that ongoing maintenance includes accessibility updates. Read the WCAG and learn best practices Below is the link to the WCAG guidelines with all the information to build a more accessible web WCAG Overview - Acessibility guidelines Let's improve our code and make the web more inclusive and accessible for everyone ❤️ That's all for this lesson, see you next one."
    },
    "/html/media/": {
        "title": "Media ",
        "text": "Media  Media elements in HTML enrich web content by allowing the integration of audio, video, and external content. They enhance user engagement and interactivity. Audio (Using  <audio> ) The  <audio>  element enables you to embed audio content like music or podcasts. You can specify the audio source using the \" src \" attribute and customize playback controls. Example: HTML < audio src = \"music.mp3\"  controls ></audio> Video (Using  <video> ) The  <video>  element seamlessly embeds videos into webpages. It supports various formats (e.g., MP4, WebM) for broader compatibility. Customize playback controls, dimensions, and multiple source formats. Example: HTML < video width = \"640\"  height = \"360\"  controls > \n    < source  src=\"video.mp4\"  type=\"video/mp4\" > \n    < source  src=\"video.webm\"  type=\"video/webm\" > \n    Your  browser  does  not  support  the  video  tag. \n < /video > Embedding YouTube Videos Use an  <iframe>  element with the YouTube video URL to easily embed and play YouTube videos on your website. Example: HTML < iframe width = \"560\"  height = \"315\"  src = \"https://www.youtube.com/embed/VIDEO_ID\"  frameborder = \"0\"  allowfullscreen ></iframe> Plugins Plugins extend the functionality of web browsers. Common examples include Flash and Java applets, although their usage has decreased over time due to security concerns and evolving web standards. Enhancing User Experience HTML media elements and plugins empower web developers to create interactive, multimedia-rich experiences, making web content more engaging and appealing to users. That's all for this lesson, see you next one."
    },
    "/html/html-semantics/": {
        "title": "HTML Semantics",
        "text": "HTML Semantics HTML semantics refers to the meaning or purpose of the elements used in an HTML document. It is important to use semantic HTML to improve the accessibility and search engine optimization (SEO) of your website. Here is a basic tutorial on HTML semantics: Use semantic tags: HTML5 introduced several new semantic tags such as  <header> ,  <nav> ,  <main> ,  <article> ,  <section> ,  <aside> , and  <footer> . These tags provide a clear indication of the purpose of the content within them. For example, the  <header>  tag is used to define the header of a document or section, while the  <nav>  tag is used to define a set of navigation links. Use headings: Headings ( <h1>  to  <h6> ) are used to define the structure of a document. They provide a clear hierarchy of the content and help users to understand the main topics of the page. Use lists: Lists ( <ul> ,  <ol> , and  <dl> ) are used to group related content together. They provide a clear structure to the content and make it easier to read and understand. Use alt text: Alt text is used to describe the content of an image for users who cannot see it. It is important to use descriptive alt text to improve the accessibility of your website. Use tables for tabular data: Tables ( <table> ,  <thead> ,  <tbody> ,  <tfoot> ,  <tr> ,  <th> , and  <td> ) are used to display tabular data. It is important to use the correct table structure to ensure that the data is presented in a clear and accessible way."
    }
}